========================================================================= 
Log Path: mutation_rate_per_site_per_generation_auc_log_file.log 
Working Directory: /mnt/STORE1/bighome/samuelgamboa/Projects/taxPProValidation 
User Name: samuelgamboa 
R Version: 4.3.1 (2023-06-16) 
Machine: supermicro x86_64 
Operating System: Linux 5.4.0-150-generic #167-Ubuntu SMP Mon May 15 17:35:05 UTC 2023 
Base Packages: stats graphics grDevices utils datasets methods base Other Packages: ggpubr_0.6.0 rlang_1.1.1 pROC_1.18.4 ggplot2_3.4.3 tidyr_1.3.0 dplyr_1.1.2 purrr_1.0.2 vroom_1.6.3 logr_1.3.4 
Log Start Time: 2023-08-16 12:33:14.565349 
========================================================================= 
Doing AUC-ROC for mutation_rate per site per generation 

Error in purrr::map(plots, .plot_grid, ncol = ncol, nrow = nrow, labels = labels, :  [1mCaused by error in `grobs[[i]]`:[22m [33m! subscript out of bounds Calls: ggarrange ... <Anonymous> -> <Anonymous> -> <Anonymous> -> signal_abort 
Traceback: 
 [1] "15: stop(fallback)"                                                                                 
 [2] "14: signal_abort(cnd, .file)"                                                                       
 [3] "13: rlang::abort(message, ..., call = call, use_cli_format = TRUE, "                                
 [4] "        .frame = .frame)"                                                                           
 [5] "12: cli::cli_abort(message, location = i, name = name, parent = cnd, "                              
 [6] "        call = error_call, class = \"purrr_error_indexed\")"                                        
 [7] "11: (function (cnd) "                                                                               
 [8] "    {"                                                                                              
 [9] "        if (i == 0L) {"                                                                             
[10] "        }"                                                                                          
[11] "        else {"                                                                                     
[12] "            message <- c(i = \"In index: {i}.\")"                                                   
[13] "            if (!is.null(names) && !is.na(names[[i]]) && names[[i]] != "                            
[14] "                \"\") {"                                                                            
[15] "                name <- names[[i]]"                                                                 
[16] "                message <- c(message, i = \"With name: {name}.\")"                                  
[17] "            }"                                                                                      
[18] "            else {"                                                                                 
[19] "                name <- NULL"                                                                       
[20] "            }"                                                                                      
[21] "            cli::cli_abort(message, location = i, name = name, parent = cnd, "                      
[22] "                call = error_call, class = \"purrr_error_indexed\")"                                
[23] "        }"                                                                                          
[24] "    })(list(message = \"subscript out of bounds\", call = grobs[[i]], "                             
[25] "        object = list(), subscript = NA_integer_, index = 1L))"                                     
[26] "10: align_plots(plotlist = plots, align = align, axis = axis, greedy = greedy)"                     
[27] "9: cowplot::plot_grid(plotlist = plotlist, ...)"                                                    
[28] "8: .f(.x[[i]], ...)"                                                                                
[29] "7: .Primitive(\".Call\")(list(name = \"map_impl\", address = <pointer: 0x558c0d89f330>, "           
[30] "       dll = list(name = \"purrr\", path = \"/mnt/STORE1/lib/R/bioc-release/purrr/libs/purrr.so\", "
[31] "           dynamicLookup = FALSE, handle = <pointer: 0x558c0f5605b0>, "                             
[32] "           info = <pointer: 0x558c0d88bda0>), numParameters = 6L), "                                
[33] "       <environment>, \"list\", FALSE, 1L, NULL, 1L)"                                               
[34] "6: call_with_cleanup(map_impl, environment(), .type, .progress, "                                   
[35] "       n, names, i)"                                                                                
[36] "5: withCallingHandlers(expr, error = function(cnd) {"                                               
[37] "       if (i == 0L) {"                                                                              
[38] "       }"                                                                                           
[39] "       else {"                                                                                      
[40] "           message <- c(i = \"In index: {i}.\")"                                                    
[41] "           if (!is.null(names) && !is.na(names[[i]]) && names[[i]] != "                             
[42] "               \"\") {"                                                                             
[43] "               name <- names[[i]]"                                                                  
[44] "               message <- c(message, i = \"With name: {name}.\")"                                   
[45] "           }"                                                                                       
[46] "           else {"                                                                                  
[47] "               name <- NULL"                                                                        
[48] "           }"                                                                                       
[49] "           cli::cli_abort(message, location = i, name = name, parent = cnd, "                       
[50] "               call = error_call, class = \"purrr_error_indexed\")"                                 
[51] "       }"                                                                                           
[52] "   })"                                                                                              
[53] "4: with_indexed_errors(i = i, names = names, error_call = .purrr_error_call, "                      
[54] "       call_with_cleanup(map_impl, environment(), .type, .progress, "                               
[55] "           n, names, i))"                                                                           
[56] "3: map_(\"list\", .x, .f, ..., .progress = .progress)"                                              
[57] "2: purrr::map(plots, .plot_grid, ncol = ncol, nrow = nrow, labels = labels, "                       
[58] "       label_size = .lab$size, label_fontfamily = .lab$family, label_fontface = .lab$face, "        
[59] "       label_colour = .lab$color, label_x = .lab$label.x, label_y = .lab$label.y, "                 
[60] "       hjust = .lab$hjust, vjust = .lab$vjust, align = align, rel_widths = widths, "                
[61] "       rel_heights = heights, legend = legend, common.legend.grob = legend.grob)"                   
[62] "1: ggarrange(plotlist = roc_plots, labels = names(roc_plots))"                                      
========================================================================= 
Log End Time: 2023-08-16 12:33:14.743463 
Log Elapsed Time: 0 00:00:00 
========================================================================= 
